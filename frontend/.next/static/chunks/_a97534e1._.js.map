{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/you1a/Downloads/netzero/frontend/components/Welcomescreen.js"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\n\r\nconst WelcomeScreen = ({ onStartScan, onEnvironmentReport }) => {\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      {/* 모바일 스타일 컨테이너 */}\r\n      <div className=\"max-w-md mx-auto px-6 py-8 min-h-screen flex flex-col\">\r\n        \r\n        {/* 메인 콘텐츠 영역 */}\r\n        <div className=\"flex-1 flex flex-col justify-center items-center text-center\">\r\n          \r\n          {/* 메인 텍스트 */}\r\n          <div className=\"mb-32\">\r\n            <h1 className=\"text-2xl font-bold text-gray-800 mb-8\">\r\n              안녕하세요\r\n            </h1>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <p className=\"text-lg font-medium text-gray-600\">\r\n                환경을 생각하는 포장,\r\n              </p>\r\n              <p className=\"text-xl font-bold text-green-800\">\r\n                PACO입니다.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 하단 버튼 영역 */}\r\n        <div className=\"space-y-4 pb-8\">\r\n          {/* 메인 버튼 - 상품 스캔하기 */}\r\n          <button\r\n            onClick={onStartScan}\r\n            className=\"w-full bg-green-800 text-white py-4 rounded-full text-lg font-semibold hover:bg-green-900 transition-colors shadow-lg\"\r\n          >\r\n            상품 스캔하기\r\n          </button>\r\n\r\n          {/* 서브 버튼 - 환경 리포트 확인하기 */}\r\n          <button\r\n            onClick={onEnvironmentReport}\r\n            className=\"w-full border border-gray-300 text-gray-700 py-4 rounded-full text-lg font-medium hover:bg-gray-50 transition-colors\"\r\n          >\r\n            환경 리포트 확인하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeScreen;"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,gBAAgB,CAAC,EAAE,WAAW,EAAE,mBAAmB,EAAE;IACzD,qBACE,6LAAC;QAAI,WAAU;kBAEb,cAAA,6LAAC;YAAI,WAAU;;8BAGb,6LAAC;oBAAI,WAAU;8BAGb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;0CAItD,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDAAoC;;;;;;kDAGjD,6LAAC;wCAAE,WAAU;kDAAmC;;;;;;;;;;;;;;;;;;;;;;;8BAQtD,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;sCAKD,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;KA/CM;uCAiDS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/you1a/Downloads/netzero/frontend/components/ProductPhotoAnalyzer.js"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef, Suspense } from 'react';\r\nimport { Camera, Package, CheckCircle } from 'lucide-react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { OrbitControls } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\n\r\n// 카메라 위치 계산 함수\r\nfunction calculateOptimalCameraPosition(containerSize) {\r\n  const { w, d, h } = containerSize;\r\n  const maxDimension = Math.max(w, d, h);\r\n  const distance = maxDimension * 2.5; // 최대 치수의 2.5배 거리\r\n  \r\n  return {\r\n    position: [distance * 0.7, distance * 0.8, distance * 0.7],\r\n    fov: 45,\r\n    minDistance: maxDimension * 0.5,\r\n    maxDistance: maxDimension * 4\r\n  };\r\n}\r\n\r\n// 3D 박스 컴포넌트\r\nfunction Box({ position, size, color, opacity = 0.8 }) {\r\n  const boxGeometry = new THREE.BoxGeometry(size.w, size.h, size.d);\r\n  \r\n  return (\r\n    <mesh position={[position.x + size.w/2, position.z + size.h/2, position.y + size.d/2]}>\r\n      <boxGeometry args={[size.w, size.h, size.d]} />\r\n      <meshStandardMaterial \r\n        color={color} \r\n        transparent \r\n        opacity={opacity}\r\n      />\r\n      {/* 박스 테두리도 제거 */}\r\n    </mesh>\r\n  );\r\n}\r\n\r\n// 3D 패킹 시각화 컴포넌트\r\nfunction PackingVisualization3D({ containerData }) {\r\n  const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FECA57', '#FF9FF3', '#54A0FF', '#5F27CD'];\r\n\r\n  if (!containerData) {\r\n    return (\r\n      <div className=\"w-full h-64 bg-gray-100 rounded-xl flex items-center justify-center\">\r\n        <div className=\"text-gray-500\">3D 모델 로딩 중...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 컨테이너 크기에 따른 최적 카메라 설정\r\n  const cameraSettings = calculateOptimalCameraPosition(containerData.container_size);\r\n\r\n  return (\r\n    <div className=\"w-full h-64 rounded-xl overflow-hidden shadow-lg\">\r\n      <Canvas \r\n        camera={{ \r\n          position: cameraSettings.position, \r\n          fov: cameraSettings.fov \r\n        }}\r\n        style={{ background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <ambientLight intensity={0.7} />\r\n          <directionalLight position={[10, 10, 5]} intensity={0.9} />\r\n          <directionalLight position={[-10, -10, -5]} intensity={0.4} />\r\n          \r\n          <OrbitControls \r\n            enablePan={true}\r\n            enableZoom={true}\r\n            enableRotate={true}\r\n            maxPolarAngle={Math.PI * 0.8}\r\n            minDistance={cameraSettings.minDistance}\r\n            maxDistance={cameraSettings.maxDistance}\r\n            target={[\r\n              containerData.container_size.w / 2, \r\n              containerData.container_size.h / 2, \r\n              containerData.container_size.d / 2\r\n            ]}\r\n          />\r\n\r\n          {/* 바닥 격자 제거 */}\r\n          \r\n          {/* 컨테이너 외곽선 제거 */}\r\n\r\n          {/* 패킹된 아이템들만 표시 */}\r\n          {containerData.items.map((item, index) => (\r\n            <Box\r\n              key={index}\r\n              position={item.pos}\r\n              size={item.size}\r\n              color={colors[index % colors.length]}\r\n              opacity={0.9}\r\n            />\r\n          ))}\r\n        </Suspense>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProductPhotoAnalyzer = ({ onBack }) => {\r\n  const [currentStep, setCurrentStep] = useState('initial');\r\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\r\n  const [videoStream, setVideoStream] = useState(null);\r\n  const [measurementResult, setMeasurementResult] = useState('');\r\n  const [productDimensions, setProductDimensions] = useState(null);\r\n  const [recommendedBox, setRecommendedBox] = useState(null);\r\n  const [markerDetected, setMarkerDetected] = useState(false);\r\n  const [packagingSimulation, setPackagingSimulation] = useState(null);\r\n  const [packingData, setPackingData] = useState(null);\r\n  const [isPackingLoading, setIsPackingLoading] = useState(false);\r\n  \r\n  // 다중 촬영 관련 state\r\n  const [measuredItems, setMeasuredItems] = useState([]);\r\n  const [showMoreItemsPopup, setShowMoreItemsPopup] = useState(false);\r\n  const [currentItemIndex, setCurrentItemIndex] = useState(1);\r\n  \r\n  // 디버깅 관련 함수들\r\n  const [debugResults, setDebugResults] = useState(null);\r\n  const [isDebugLoading, setIsDebugLoading] = useState(false);\r\n  const [showDebugPanel, setShowDebugPanel] = useState(false);\r\n\r\n  const runDebugTest = async (endpoint, data = null) => {\r\n    setIsDebugLoading(true);\r\n    try {\r\n      const options = {\r\n        method: data ? 'POST' : 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      \r\n      if (data) {\r\n        options.body = JSON.stringify(data);\r\n      }\r\n\r\n      console.log(`🧪 디버그 테스트 실행: ${endpoint}`);\r\n      const response = await fetch(`http://localhost:8002${endpoint}`, options);\r\n      const result = await response.json();\r\n      \r\n      setDebugResults({\r\n        endpoint,\r\n        status: response.status,\r\n        success: response.ok,\r\n        data: result,\r\n        timestamp: new Date().toLocaleTimeString()\r\n      });\r\n      \r\n      console.log(`✅ 디버그 테스트 완료: ${endpoint}`, result);\r\n    } catch (error) {\r\n      console.error(`❌ 디버그 테스트 실패: ${endpoint}`, error);\r\n      setDebugResults({\r\n        endpoint,\r\n        success: false,\r\n        error: error.message,\r\n        timestamp: new Date().toLocaleTimeString()\r\n      });\r\n    } finally {\r\n      setIsDebugLoading(false);\r\n    }\r\n  };\r\n  \r\n  const socketRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n\r\n  // 우체국 택배 박스 규격 (백엔드와 동기화)\r\n  const boxSizes = [\r\n    { \r\n      name: '1호 박스', \r\n      dimensions: '220 × 190 × 90mm', \r\n      maxW: 220, maxL: 190, maxH: 90,\r\n      volume: 3762000,\r\n      price: '700원',\r\n      id: 1,\r\n      image: '/images/001.jpg'\r\n    },\r\n    { \r\n      name: '2호 박스', \r\n      dimensions: '270 × 180 × 150mm', \r\n      maxW: 270, maxL: 180, maxH: 150,\r\n      volume: 7290000,\r\n      price: '800원',\r\n      id: 2,\r\n      image: '/images/002.jpg'\r\n    },\r\n    { \r\n      name: '3호 박스', \r\n      dimensions: '350 × 250 × 100mm', \r\n      maxW: 350, maxL: 250, maxH: 100,\r\n      volume: 8750000,\r\n      price: '900원',\r\n      id: 21,\r\n      image: '/images/003.jpg'\r\n    },\r\n    { \r\n      name: '4호 박스', \r\n      dimensions: '340 × 250 × 210mm', \r\n      maxW: 340, maxL: 250, maxH: 210,\r\n      volume: 17850000,\r\n      price: '1,100원',\r\n      id: 3,\r\n      image: '/images/004.jpg'\r\n    },\r\n    { \r\n      name: '5호 박스', \r\n      dimensions: '410 × 310 × 280mm', \r\n      maxW: 410, maxL: 310, maxH: 280,\r\n      volume: 35588000,\r\n      price: '1,300원',\r\n      id: 4,\r\n      image: '/images/005.jpg'\r\n    },\r\n    { \r\n      name: '6호 박스', \r\n      dimensions: '520 × 380 × 340mm', \r\n      maxW: 520, maxL: 380, maxH: 340,\r\n      volume: 67123200,\r\n      price: '1,500원',\r\n      id: 5,\r\n      image: '/images/006.jpg'\r\n    },\r\n    { \r\n      name: '7호 박스', \r\n      dimensions: '520 × 480 × 400mm', \r\n      maxW: 520, maxL: 480, maxH: 400,\r\n      volume: 99840000,\r\n      price: '1,700원',\r\n      id: 6,\r\n      image: '/images/007.jpg'\r\n    },\r\n    { \r\n      name: '8호 박스', \r\n      dimensions: '620 × 480 × 400mm', \r\n      maxW: 620, maxL: 480, maxH: 400,\r\n      volume: 119040000,\r\n      price: '1,900원',\r\n      id: 7,\r\n      image: '/images/008.jpg'\r\n    }\r\n  ];\r\n\r\n  // Socket.IO 연결 설정\r\n  useEffect(() => {\r\n    connectToCamera();\r\n    \r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const connectToCamera = async () => {\r\n    setConnectionStatus('connecting');\r\n    \r\n    try {\r\n      const io = (await import('socket.io-client')).default;\r\n      \r\n      socketRef.current = io('http://127.0.0.1:8002', {\r\n        transports: ['websocket', 'polling']\r\n      });\r\n\r\n      socketRef.current.on('connect', () => {\r\n        console.log('카메라 서버에 연결됨');\r\n        setConnectionStatus('connected');\r\n      });\r\n\r\n      socketRef.current.on('disconnect', () => {\r\n        console.log('카메라 서버 연결 끊김');\r\n        setConnectionStatus('disconnected');\r\n        setVideoStream(null);\r\n        setMarkerDetected(false);\r\n      });\r\n\r\n      socketRef.current.on('video_frame', (data) => {\r\n        if (data.image) {\r\n          setVideoStream(`data:image/jpeg;base64,${data.image}`);\r\n        }\r\n        if (data.marker_detected !== undefined) {\r\n          setMarkerDetected(data.marker_detected);\r\n        }\r\n      });\r\n\r\n      socketRef.current.on('measurement_result', (data) => {\r\n        console.log('측정 결과 수신:', data);\r\n        \r\n        setMeasurementResult(data.dimensions);\r\n        \r\n        // 측정된 물체 크기 정보 처리 (박스 추천은 제거)\r\n        if (data.measurements) {\r\n          setProductDimensions({\r\n            width: data.measurements.width,\r\n            length: data.measurements.length,\r\n            height: data.measurements.height,\r\n            volume: data.measurements.width * data.measurements.length * data.measurements.height\r\n          });\r\n        }\r\n        \r\n        // 측정 성공 시 결과 단계로 이동\r\n        if (data.dimensions && \r\n            data.dimensions !== '마커를 먼저 인식시켜주세요.' && \r\n            !data.dimensions.includes('실패') && \r\n            !data.dimensions.includes('찾을 수 없습니다') && \r\n            !data.dimensions.includes('인식할 수 없습니다')) {\r\n          \r\n          // 첫 번째 물체 측정 완료 시 팝업 표시\r\n          if (measuredItems.length === 0) {\r\n            setShowMoreItemsPopup(true);\r\n          } else {\r\n            // 추가 물체 측정 완료 시 바로 결과로 이동\r\n            setCurrentStep('result');\r\n          }\r\n        } else {\r\n          setCurrentStep('initial');\r\n          if (data.dimensions !== '마커를 먼저 인식시켜주세요.' && data.dimensions !== '') {\r\n            alert(`측정에 실패했습니다: ${data.dimensions}`);\r\n          }\r\n        }\r\n      });\r\n\r\n      socketRef.current.on('connect_error', (error) => {\r\n        console.error('연결 오류:', error);\r\n        setConnectionStatus('disconnected');\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Socket.IO 로드 오류:', error);\r\n      setConnectionStatus('disconnected');\r\n    }\r\n  };\r\n\r\n  const disconnectCamera = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n    setConnectionStatus('disconnected');\r\n    setVideoStream(null);\r\n    setMeasurementResult('');\r\n    setMarkerDetected(false);\r\n  };\r\n\r\n  const generatePackagingSimulation = () => {\r\n    if (!productDimensions || !recommendedBox) return null;\r\n\r\n    // 랜덤으로 1-3개의 추가 물체 생성 (원래 물체보다 작게)\r\n    const numItems = Math.floor(Math.random() * 3) + 1;\r\n    const items = [{\r\n      id: 'main',\r\n      width: productDimensions.width,\r\n      length: productDimensions.length,\r\n      height: productDimensions.height,\r\n      color: '#3B82F6',\r\n      name: '측정된 상품'\r\n    }];\r\n\r\n    // 추가 물체들 생성\r\n    for (let i = 0; i < numItems; i++) {\r\n      const scale = 0.3 + Math.random() * 0.4; // 30-70% 크기\r\n      items.push({\r\n        id: `item${i + 1}`,\r\n        width: productDimensions.width * scale,\r\n        length: productDimensions.length * scale,\r\n        height: productDimensions.height * scale,\r\n        color: ['#EF4444', '#10B981', '#F59E0B', '#8B5CF6'][i % 4],\r\n        name: `상품 ${i + 1}`\r\n      });\r\n    }\r\n\r\n    // 간단한 포장 배치 알고리즘\r\n    const boxWidth = recommendedBox.specs?.maxW || recommendedBox.maxW || 350;\r\n    const boxLength = recommendedBox.specs?.maxL || recommendedBox.maxL || 250;\r\n    const boxHeight = recommendedBox.specs?.maxH || recommendedBox.maxH || 210;\r\n    \r\n    const placedItems = [];\r\n    let currentX = 10, currentY = 10, currentZ = 10;\r\n    let maxHeightInRow = 0;\r\n\r\n    items.forEach((item, index) => {\r\n      // 현재 위치에 배치 가능한지 확인\r\n      if (currentX + item.width > boxWidth - 10) {\r\n        // 다음 줄로\r\n        currentX = 10;\r\n        currentY += maxHeightInRow + 5;\r\n        maxHeightInRow = 0;\r\n      }\r\n\r\n      if (currentY + item.length > boxLength - 10) {\r\n        // 다음 층으로\r\n        currentY = 10;\r\n        currentZ += maxHeightInRow + 5;\r\n        maxHeightInRow = 0;\r\n      }\r\n\r\n      placedItems.push({\r\n        ...item,\r\n        x: currentX,\r\n        y: currentY,\r\n        z: currentZ\r\n      });\r\n\r\n      currentX += item.width + 5;\r\n      maxHeightInRow = Math.max(maxHeightInRow, item.height);\r\n    });\r\n\r\n    return {\r\n      items: placedItems,\r\n      box: { width: boxWidth, length: boxLength, height: boxHeight },\r\n      efficiency: Math.min(95, 65 + Math.random() * 20) // 65-85% 효율성\r\n    };\r\n  };\r\n\r\n  const handleAnalyze = () => {\r\n    if (socketRef.current && connectionStatus === 'connected' && markerDetected) {\r\n      setCurrentStep('analyzing');\r\n      socketRef.current.emit('measure');\r\n    } else if (!markerDetected) {\r\n      alert('ArUco 마커를 먼저 인식시켜주세요.');\r\n    } else {\r\n      alert('카메라가 연결되지 않았습니다.');\r\n    }\r\n  };\r\n\r\n  const handleClearMeasurement = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.emit('clear');\r\n    }\r\n    setMeasurementResult('');\r\n    setProductDimensions(null);\r\n    setRecommendedBox(null);\r\n  };\r\n\r\n  const handleUsePackaging = async () => {\r\n    setCurrentStep('packaging_loading');\r\n    setIsPackingLoading(true);\r\n    \r\n    try {\r\n      // 측정된 물체들의 데이터를 백엔드로 전송\r\n      const itemsToSend = measuredItems.map(item => [\r\n        Math.round(item.width),\r\n        Math.round(item.length), \r\n        Math.round(item.height)\r\n      ]);\r\n\r\n      console.log('🚀 전송할 물체 데이터:', itemsToSend);\r\n      console.log('📊 총 물체 개수:', measuredItems.length);\r\n\r\n      // 백엔드에서 패킹 데이터 가져오기\r\n      const response = await fetch('http://localhost:8002/pack/boxes', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          items: itemsToSend\r\n        })\r\n      });\r\n      \r\n      console.log('📡 백엔드 응답 상태:', response.status);\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('✅ 받은 패킹 데이터:', data);\r\n        \r\n        // 오류 응답 확인\r\n        if (data.error) {\r\n          throw new Error(data.message || '패킹 데이터에 오류가 있습니다');\r\n        }\r\n        \r\n        setPackingData(data);\r\n        \r\n        // 🔥 백엔드에서 받은 박스 추천 결과 처리\r\n        if (data.recommended_box && data.recommended_box.success) {\r\n          const backendRecommendation = data.recommended_box;\r\n          const recommendedBoxInfo = {\r\n            name: backendRecommendation.box_name,\r\n            dimensions: backendRecommendation.dimensions,\r\n            price: backendRecommendation.price,\r\n            specs: backendRecommendation.specs,\r\n            // 프론트엔드 박스 정보와 매칭해서 이미지 추가\r\n            ...findBoxImageById(backendRecommendation.box_name)\r\n          };\r\n          \r\n          setRecommendedBox(recommendedBoxInfo);\r\n          console.log('📦 Azure OpenAI 추천 박스:', recommendedBoxInfo);\r\n        } else {\r\n          // AI 추천 실패 시 로컬 추천 사용\r\n          console.log('⚠️ AI 박스 추천 실패, 로컬 추천 사용:', data.recommended_box?.error);\r\n          const containerSize = data.container_size;\r\n          const fallbackBoxInfo = findBestBoxForContainer(containerSize);\r\n          setRecommendedBox({\r\n            ...fallbackBoxInfo,\r\n            fallback: true,\r\n            ai_error: data.recommended_box?.error\r\n          });\r\n        }\r\n        \r\n        // 최종 측정된 물체 목록은 이미 업데이트됨\r\n        \r\n        // 로딩 시간 후 결과 화면으로 이동\r\n        setTimeout(() => {\r\n          setCurrentStep('packaging_result');\r\n          setIsPackingLoading(false);\r\n        }, 2000);\r\n      } else {\r\n        const errorText = await response.text();\r\n        throw new Error(`서버 오류 (${response.status}): ${errorText}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ 패킹 데이터 로딩 실패:', error);\r\n      \r\n      // 오류 메시지 표시\r\n      alert(`패킹 시뮬레이션 오류: ${error.message}`);\r\n      \r\n      // 실패 시 기존 시뮬레이션 사용\r\n      const simulation = generatePackagingSimulation();\r\n      setPackagingSimulation(simulation);\r\n      \r\n      setTimeout(() => {\r\n        setCurrentStep('packaging_result');\r\n        setIsPackingLoading(false);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // 박스 이름으로 프론트엔드 박스 정보 찾기 (이미지 등)\r\n  const findBoxImageById = (boxName) => {\r\n    const frontendBox = boxSizes.find(box => \r\n      box.name.includes(boxName) || \r\n      boxName.includes(box.name.replace(' 박스', ''))\r\n    );\r\n    \r\n    return frontendBox ? {\r\n      image: frontendBox.image,\r\n      id: frontendBox.id,\r\n      volume: frontendBox.volume\r\n    } : {\r\n      image: null,\r\n      id: 'unknown'\r\n    };\r\n  };\r\n\r\n  // 컨테이너 크기에 맞는 최적 박스 찾기 함수 (fallback용)\r\n  const findBestBoxForContainer = (containerSize) => {\r\n    const { w, d, h } = containerSize;\r\n    const safetyMargin = 1.05; // 5% 여유 공간\r\n    \r\n    // 박스 크기 순서대로 확인\r\n    for (const box of boxSizes) {\r\n      const fitsWidth = (w * safetyMargin) <= box.maxW;\r\n      const fitsLength = (d * safetyMargin) <= box.maxL;\r\n      const fitsHeight = (h * safetyMargin) <= box.maxH;\r\n      \r\n      if (fitsWidth && fitsLength && fitsHeight) {\r\n        return {\r\n          name: box.name,\r\n          dimensions: box.dimensions,\r\n          specs: {\r\n            maxW: box.maxW,\r\n            maxL: box.maxL,\r\n            maxH: box.maxH\r\n          },\r\n          price: box.price,\r\n          image: box.image,\r\n          id: box.id,\r\n          volume: box.volume\r\n        };\r\n      }\r\n    }\r\n    \r\n    // 모든 박스에 안 맞으면 특수 포장 추천\r\n    return {\r\n      name: '특수 포장',\r\n      dimensions: '표준 박스보다 큰 물체입니다',\r\n      specs: { maxW: 999, maxL: 999, maxH: 999 },\r\n      price: '별도 문의',\r\n      image: null,\r\n      id: 'special'\r\n    };\r\n  };\r\n\r\n  // 다중 촬영 관련 함수들\r\n  const handleAddMoreItems = () => {\r\n    // 현재 측정된 물체를 배열에 추가\r\n    if (productDimensions) {\r\n      const newItem = {\r\n        id: currentItemIndex,\r\n        width: productDimensions.width,\r\n        length: productDimensions.length,\r\n        height: productDimensions.height,\r\n        name: `물체 ${currentItemIndex}`\r\n      };\r\n      setMeasuredItems(prev => [...prev, newItem]);\r\n      setCurrentItemIndex(prev => prev + 1);\r\n      // 현재 측정 정보 초기화 (중복 카운트 방지)\r\n      setProductDimensions(null);\r\n    }\r\n\r\n    setShowMoreItemsPopup(false);\r\n    \r\n    // 최대 4개까지만 허용\r\n    if (measuredItems.length + 1 >= 4) {\r\n      setCurrentStep('result');\r\n    } else {\r\n      // 다음 물체 촬영을 위해 초기화\r\n      handleClearMeasurement();\r\n      setCurrentStep('initial');\r\n    }\r\n  };\r\n\r\n  const handleNoMoreItems = () => {\r\n    // 현재 측정된 물체를 배열에 추가하고 결과로 이동\r\n    if (productDimensions) {\r\n      const newItem = {\r\n        id: currentItemIndex,\r\n        width: productDimensions.width,\r\n        length: productDimensions.length,\r\n        height: productDimensions.height,\r\n        name: `물체 ${currentItemIndex}`\r\n      };\r\n      setMeasuredItems(prev => [...prev, newItem]);\r\n      // 현재 측정 정보 초기화 (중복 카운트 방지)\r\n      setProductDimensions(null);\r\n    }\r\n\r\n    setShowMoreItemsPopup(false);\r\n    setCurrentStep('result');\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    handleClearMeasurement();\r\n    setCurrentStep('initial');\r\n    setPackagingSimulation(null);\r\n    setPackingData(null);\r\n    setIsPackingLoading(false);\r\n    setRecommendedBox(null); // 박스 추천 초기화 추가\r\n    \r\n    // 다중 촬영 관련 state 초기화\r\n    setMeasuredItems([]);\r\n    setShowMoreItemsPopup(false);\r\n    setCurrentItemIndex(1);\r\n    \r\n    // 디버그 관련 state 초기화\r\n    setShowDebugPanel(false);\r\n    setDebugResults(null);\r\n  \r\n    // 웰컴 페이지로 돌아가기\r\n    if (onBack) {\r\n      onBack();\r\n   }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (currentStep) {\r\n      case 'initial':\r\n        return (\r\n          <div className=\"flex flex-col items-center px-6\">\r\n            <h1 className=\"text-4xl font-bold text-green-800 mb-4\">상품촬영</h1>\r\n            \r\n            {/* 촬영 진행 상태 표시 */}\r\n            {measuredItems.length > 0 && (\r\n              <div className=\"mb-4 p-3 bg-blue-50 rounded-lg\">\r\n                <p className=\"text-blue-700 text-center font-medium\">\r\n                  추가 물체 촬영 중 ({measuredItems.length}/4개 완료)\r\n                </p>\r\n                <div className=\"flex justify-center gap-2 mt-2\">\r\n                  {Array.from({length: 4}, (_, i) => (\r\n                    <div\r\n                      key={i}\r\n                      className={`w-3 h-3 rounded-full ${\r\n                        i < measuredItems.length ? 'bg-blue-500' : \r\n                        i === measuredItems.length ? 'bg-blue-300 animate-pulse' : 'bg-gray-300'\r\n                      }`}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <p className=\"text-green-700 mb-12 text-center text-lg\">\r\n              {measuredItems.length === 0 \r\n                ? '상품을 중앙에 맞춰서 촬영해주세요.'\r\n                : `${measuredItems.length + 1}번째 물체를 촬영해주세요.`\r\n              }\r\n            </p>\r\n            \r\n            <div className=\"relative w-full max-w-md mx-auto mb-12\">\r\n              <div className={`relative rounded-3xl overflow-hidden ${\r\n                connectionStatus === 'connected' \r\n                  ? markerDetected \r\n                    ? 'ring-4 ring-green-800' \r\n                    : 'ring-4 ring-red-500'\r\n                  : 'ring-4 ring-gray-300'\r\n              }`}>\r\n                {videoStream && connectionStatus === 'connected' ? (\r\n                  <img \r\n                    ref={videoRef}\r\n                    src={videoStream}\r\n                    alt=\"Camera feed\" \r\n                    className=\"w-full h-80 object-cover\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"w-full h-80 bg-gray-100 flex items-center justify-center\">\r\n                    <div className=\"text-center\">\r\n                      <Camera className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n                      <p className=\"text-gray-500 text-lg\">\r\n                        {connectionStatus === 'connecting' ? '카메라 연결 중...' : '카메라를 연결하는 중입니다'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {connectionStatus === 'connected' && (\r\n                <div className={`absolute top-4 left-4 px-3 py-1 rounded-full text-white text-sm font-medium ${\r\n                  markerDetected ? 'bg-green-800' : 'bg-red-500'\r\n                }`}>\r\n                  {markerDetected ? '✓ 마커 인식됨' : '마커를 찾는 중...'}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col gap-4 w-full max-w-sm\">\r\n              <button \r\n                onClick={handleAnalyze}\r\n                disabled={!markerDetected || connectionStatus !== 'connected'}\r\n                className={`px-12 py-4 rounded-full text-lg font-semibold transition-all duration-200 ${\r\n                  markerDetected && connectionStatus === 'connected'\r\n                    ? 'bg-green-800 text-white hover:bg-green-900 shadow-lg' \r\n                    : 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                }`}\r\n              >\r\n                분석하기\r\n              </button>\r\n              \r\n              <button \r\n                onClick={handleRestart}\r\n                className=\"text-green-800 py-2 text-lg hover:text-green-900 transition-colors\"\r\n              >\r\n                재분석하기\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'analyzing':\r\n        return (\r\n          <div className=\"flex flex-col items-center px-6\">\r\n            <h1 className=\"text-4xl font-bold text-green-800 mb-8\">상품촬영</h1>\r\n            <p className=\"text-green-700 mb-12 text-center text-xl\">상품을 분석중입니다.</p>\r\n            \r\n            <div className=\"relative w-full max-w-md mx-auto mb-12\">\r\n              <div className=\"relative rounded-3xl overflow-hidden\">\r\n                <img \r\n                  src={videoStream || \"https://images.unsplash.com/photo-1611930022073-b7a4ba5fcccd?w=400\"}\r\n                  alt=\"Analyzing product\" \r\n                  className=\"w-full h-80 object-cover opacity-75\"\r\n                />\r\n                <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                  <div className=\"bg-white/95 px-6 py-3 rounded-full flex items-center gap-3 shadow-lg\">\r\n                    <div className=\"w-5 h-5 border-2 border-gray-300 border-t-green-800 rounded-full animate-spin\"></div>\r\n                    <span className=\"text-gray-700 font-medium text-lg\">분석중...</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'result':\r\n        const totalMeasuredItems = measuredItems.length;\r\n        \r\n        return (\r\n          <div className=\"flex flex-col items-center px-6\">\r\n            <div className=\"text-center\">\r\n              <h2 className=\"text-green-800 text-3xl font-bold mb-3\">측정 완료</h2>\r\n              <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">\r\n                {totalMeasuredItems}개 물체 측정됨\r\n              </h1>\r\n              <p className=\"text-xl text-gray-600 mb-6\">\r\n                포장 최적화를 위해 분석을 진행하세요\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"w-full max-w-xl mx-auto mb-6\">\r\n              <div className=\"flex justify-center\">\r\n                <div className=\"relative\">\r\n                  <div className=\"w-96 h-72 bg-gradient-to-br from-green-100 to-green-200 rounded-lg shadow-lg flex items-center justify-center\">\r\n                    <div className=\"text-center\">\r\n                      <Package className=\"w-24 h-24 text-green-700 mx-auto mb-4\" />\r\n                      <span className=\"text-2xl font-bold text-green-800\">\r\n                        📦 {totalMeasuredItems}개 물체\r\n                      </span>\r\n                      <p className=\"text-green-600 mt-2\">최적 포장 계산 준비 완료</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"space-y-2 mb-6 w-full max-w-xl\">\r\n              <div className=\"flex items-center justify-center text-lg\">\r\n                <span className=\"text-green-800 mr-3 text-4xl font-bold\">✓</span>\r\n                <span className=\"text-gray-700\">\r\n                  총 {totalMeasuredItems}개 물체 측정 완료\r\n                </span>\r\n              </div>\r\n              \r\n              {/* 측정된 물체들 */}\r\n              {measuredItems.map((item, index) => (\r\n                <div key={item.id} className=\"flex items-center justify-center text-sm bg-gray-50 rounded-lg p-2\">\r\n                  <span className=\"text-green-600 mr-2 text-lg font-bold\">📦</span>\r\n                  <span className=\"text-gray-600\">\r\n                    {item.name}: {item.width.toFixed(0)} × {item.length.toFixed(0)} × {item.height.toFixed(0)}mm\r\n                  </span>\r\n                </div>\r\n              ))}\r\n              \r\n              <div className=\"flex items-center justify-center text-lg\">\r\n                <span className=\"text-green-800 mr-3 text-4xl font-bold\">🎯</span>\r\n                <span className=\"text-gray-700\">\r\n                  AI 분석으로 최적 박스 크기 계산 준비됨\r\n                </span>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center justify-center text-lg\">\r\n                <span className=\"text-green-800 mr-3 text-4xl font-bold\">♻️</span>\r\n                <span className=\"text-gray-700\">\r\n                  포장재 낭비 최소화 및 배송비 절감\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            <p className=\"text-green-800 text-center mb-8 px-4 text-lg leading-relaxed max-w-xl mx-auto font-medium\">\r\n              모든 물체를 고려한 최적의 박스 크기와<br />\r\n              포장 배치를 AI가 계산해드립니다.\r\n            </p>\r\n            \r\n            <div className=\"flex flex-col gap-6 w-full max-w-md\">\r\n              <button \r\n                onClick={handleUsePackaging}\r\n                disabled={totalMeasuredItems === 0}\r\n                className={`px-12 py-5 rounded-full text-2xl font-semibold transition-colors shadow-lg ${\r\n                  totalMeasuredItems > 0\r\n                    ? 'bg-green-800 text-white hover:bg-green-900' \r\n                    : 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                }`}\r\n              >\r\n                최적 포장 계산하기\r\n              </button>\r\n              <button \r\n                onClick={handleRestart}\r\n                className=\"text-green-800 py-5 text-2xl font-semibold hover:text-green-900 transition-colors shadow-md rounded-full border border-green-300 hover:border-green-400\"\r\n              >\r\n                재분석하기\r\n              </button>\r\n            </div>\r\n\r\n            {measurementResult && (\r\n              <div className=\"mt-6 p-4 bg-gray-50 rounded-xl w-full max-w-xl\">\r\n                <h3 className=\"font-semibold text-gray-800 mb-2 text-lg\">최근 측정 결과</h3>\r\n                <p className=\"text-gray-600\">{measurementResult}</p>\r\n                <p className=\"text-sm text-gray-500 mt-2\">\r\n                  * 최종 박스 추천은 모든 물체를 고려하여 계산됩니다\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case 'packaging_loading':\r\n        return (\r\n          <div className=\"flex flex-col items-center px-6 pt-16\">\r\n            <div className=\"text-center mb-12\">\r\n              <h1 className=\"text-4xl font-bold text-green-800 mb-4\">포장 방법 분석 중</h1>\r\n              <p className=\"text-xl text-green-600\">최적의 포장 방법을 계산하고 있습니다...</p>\r\n            </div>\r\n\r\n            {/* 시네마틱 로딩 애니메이션 */}\r\n            <div className=\"relative w-80 h-80 mb-12\">\r\n              {/* 외곽 원형 애니메이션 */}\r\n              <div className=\"absolute inset-0 rounded-full border-4 border-gray-200\"></div>\r\n              <div className=\"absolute inset-0 rounded-full border-4 border-transparent border-t-green-600 animate-spin\"></div>\r\n              \r\n              {/* 중앙 박스 애니메이션 */}\r\n              <div className=\"absolute inset-12 bg-gradient-to-br from-green-100 to-green-200 rounded-full flex items-center justify-center\">\r\n                <Package className=\"w-24 h-24 text-green-700 animate-pulse\" />\r\n              </div>\r\n              \r\n              {/* 내부 회전 애니메이션 */}\r\n              <div className=\"absolute inset-8 rounded-full border-2 border-transparent border-r-green-400 animate-spin\" style={{animationDirection: 'reverse', animationDuration: '3s'}}></div>\r\n            </div>\r\n\r\n            {/* 진행 단계 표시 */}\r\n            <div className=\"space-y-4 text-center\">\r\n              <div className=\"flex items-center justify-center gap-3\">\r\n                <div className=\"w-3 h-3 bg-green-600 rounded-full animate-pulse\"></div>\r\n                <span className=\"text-green-700 font-medium\">상품 크기 분석 완료</span>\r\n              </div>\r\n              <div className=\"flex items-center justify-center gap-3\">\r\n                <div className=\"w-3 h-3 bg-green-600 rounded-full animate-pulse\" style={{animationDelay: '0.5s'}}></div>\r\n                <span className=\"text-green-700 font-medium\">박스 크기 최적화 완료</span>\r\n              </div>\r\n              <div className=\"flex items-center justify-center gap-3\">\r\n                <div className=\"w-3 h-3 bg-green-600 rounded-full animate-pulse\" style={{animationDelay: '1s'}}></div>\r\n                <span className=\"text-green-500\">포장 배치 계산 중</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'packaging_result':\r\n        const totalMeasuredItemsResult = measuredItems.length;\r\n        \r\n        return (\r\n          <div className=\"flex flex-col items-center px-6\">\r\n            {/* 뒤로가기 버튼과 제목 */}\r\n            <div className=\"w-full max-w-md mx-auto mb-8\">\r\n              <div className=\"flex items-center mb-6\">\r\n                <button \r\n                  onClick={handleRestart}\r\n                  className=\"text-gray-600 hover:text-gray-800 transition-colors\"\r\n                >\r\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n                  </svg>\r\n                </button>\r\n                <h1 className=\"text-xl font-bold text-green-800 text-center flex-1\">최적 포장 결과</h1>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 추천 박스 정보 */}\r\n            {recommendedBox && (\r\n              <div className=\"w-full max-w-md mx-auto mb-6\">\r\n                <div className=\"text-center mb-4\">\r\n                  <h2 className=\"text-2xl font-bold text-green-800 mb-2\">\r\n                    {recommendedBox.fallback ? '추천 박스 (로컬 계산)' : '추천 박스 (AI 분석)'}\r\n                  </h2>\r\n                  <h3 className=\"text-xl font-semibold text-gray-900\">{recommendedBox.name}</h3>\r\n                  <p className=\"text-gray-600\">{recommendedBox.dimensions}</p>\r\n                  {recommendedBox.price && (\r\n                    <p className=\"text-green-600 font-medium\">{recommendedBox.price}</p>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"flex justify-center mb-4\">\r\n                  {recommendedBox.image ? (\r\n                    <img \r\n                      src={recommendedBox.image} \r\n                      alt={recommendedBox.name}\r\n                      className=\"w-48 h-36 object-contain rounded-lg\"\r\n                      onError={(e) => {\r\n                        e.target.style.display = 'none';\r\n                        e.target.nextSibling.style.display = 'flex';\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                  <div \r\n                    className=\"w-48 h-36 bg-amber-200 rounded-lg shadow-lg flex items-center justify-center\"\r\n                    style={{display: recommendedBox.image ? 'none' : 'flex'}}\r\n                  >\r\n                    <span className=\"text-4xl font-bold text-gray-800\">\r\n                      {recommendedBox.id !== 'special' ? recommendedBox.id : '📦'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* 3D 박스 시각화 */}\r\n            <div className=\"w-full max-w-md mx-auto mb-8\">\r\n              {isPackingLoading ? (\r\n                <div className=\"w-full h-64 bg-gray-100 rounded-xl flex items-center justify-center\">\r\n                  <div className=\"flex flex-col items-center\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600 mb-2\"></div>\r\n                    <span className=\"text-gray-600\">3D 모델 생성 중...</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <PackingVisualization3D containerData={packingData} />\r\n              )}\r\n              \r\n              {/* 패킹 효율성 정보 */}\r\n              {packingData && (\r\n                <div className=\"mt-4 p-3 bg-green-50 rounded-lg\">\r\n                  <div className=\"flex justify-between items-center text-sm\">\r\n                    <span className=\"text-green-700 font-medium\">패킹 효율성</span>\r\n                    <span className=\"text-green-800 font-bold\">{packingData.efficiency}%</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center text-sm mt-1\">\r\n                    <span className=\"text-green-700 font-medium\">박스 타입</span>\r\n                    <span className=\"text-green-800\">{packingData.box_type}</span>\r\n                  </div>\r\n                  {recommendedBox && recommendedBox.name !== '특수 포장' && (\r\n                    <div className=\"flex justify-between items-center text-sm mt-1\">\r\n                      <span className=\"text-green-700 font-medium\">추천 박스</span>\r\n                      <span className=\"text-green-800\">{recommendedBox.name}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* 상품 정보 */}\r\n            <div className=\"w-full max-w-md mx-auto space-y-4 text-left\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-600 font-medium\">총 상품 수</span>\r\n                <span className=\"text-gray-800\">{totalMeasuredItemsResult}개</span>\r\n              </div>\r\n              \r\n              {/* 측정된 각 물체별 정보 */}\r\n              {measuredItems.map((item, index) => (\r\n                <div key={item.id} className=\"bg-gray-50 rounded-lg p-3 space-y-2\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-gray-600 font-medium\">{item.name}</span>\r\n                    <span className=\"text-sm text-gray-500\">#{item.id}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-gray-600 text-sm\">규격</span>\r\n                    <span className=\"text-gray-800 text-sm\">\r\n                      {item.width.toFixed(0)} × {item.length.toFixed(0)} × {item.height.toFixed(0)} mm\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n\r\n              {/* 구분선 */}\r\n              <div className=\"border-t border-gray-300 my-6\"></div>\r\n\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-green-700 font-medium\">계산된 상자 규격</span>\r\n                <span className=\"text-gray-800\">\r\n                  {packingData \r\n                    ? `${packingData.container_size.w} × ${packingData.container_size.d} × ${packingData.container_size.h} mm`\r\n                    : '계산 중...'\r\n                  }\r\n                </span>\r\n              </div>\r\n              \r\n              {recommendedBox && (\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-green-700 font-medium\">실제 사용 박스</span>\r\n                  <span className=\"text-gray-800\">{recommendedBox.name}</span>\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-green-700 font-medium\">파손위험도</span>\r\n                <span className=\"text-gray-800\">낮음</span>\r\n              </div>\r\n              \r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-green-700 font-medium\">완충재</span>\r\n                <span className=\"text-gray-800\">종이류</span>\r\n              </div>\r\n\r\n              {recommendedBox?.price && recommendedBox.price !== '별도 문의' && (\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-green-700 font-medium\">포장 비용</span>\r\n                  <span className=\"text-gray-800\">{recommendedBox.price}</span>\r\n                </div>\r\n              )}\r\n\r\n              {/* 개선 효과 */}\r\n              <div className=\"mt-8 space-y-3\">\r\n                <div className=\"flex items-center justify-center text-lg\">\r\n                  <span className=\"text-green-800 mr-3 text-4xl font-bold\">📦</span>\r\n                  <span className=\"text-gray-700\">\r\n                    총 {totalMeasuredItemsResult}개 물체 동시 최적화 완료\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center gap-3\">\r\n                  <CheckCircle className=\"w-5 h-5 text-green-600\" />\r\n                  <span className=\"text-gray-800\">3D 패킹으로 공간 효율성 {packingData?.efficiency || 85}% 달성</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-3\">\r\n                  <CheckCircle className=\"w-5 h-5 text-green-600\" />\r\n                  <span className=\"text-gray-800\">일반 포장 대비 완충재 30% 절감</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-3\">\r\n                  <CheckCircle className=\"w-5 h-5 text-green-600\" />\r\n                  <span className=\"text-gray-800\">최적 박스 선택으로 배송비 절약</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 버튼 */}\r\n            <div className=\"w-full max-w-md mx-auto mt-12\">\r\n              <button \r\n                onClick={handleRestart}\r\n                className=\"w-full bg-green-800 text-white py-4 rounded-full text-lg font-semibold hover:bg-green-900 transition-colors shadow-lg\"\r\n              >\r\n                다음 상품 스캔하기\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      <div className=\"mx-auto w-full max-w-4xl px-4 py-12 md:py-20\">\r\n        {renderContent()}\r\n        \r\n        {/* 다중 촬영 팝업 */}\r\n        {showMoreItemsPopup && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-2xl p-8 max-w-md w-full mx-4 shadow-2xl\">\r\n              <div className=\"text-center\">\r\n                <Package className=\"w-16 h-16 mx-auto mb-4 text-green-600\" />\r\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n                  물체 측정 완료!\r\n                </h2>\r\n                <p className=\"text-gray-600 mb-2\">\r\n                  현재 측정된 물체: {measuredItems.length + 1}개\r\n                </p>\r\n                <p className=\"text-gray-600 mb-6\">\r\n                  추가로 물체를 촬영하시겠습니까?<br />\r\n                  <span className=\"text-sm text-gray-500\">(최대 4개까지 가능)</span>\r\n                </p>\r\n                \r\n                <div className=\"flex gap-3\">\r\n                  <button\r\n                    onClick={handleNoMoreItems}\r\n                    className=\"flex-1 px-6 py-3 border border-gray-300 rounded-full text-gray-700 font-semibold hover:bg-gray-50 transition-colors\"\r\n                  >\r\n                    아니오\r\n                  </button>\r\n                  <button\r\n                    onClick={handleAddMoreItems}\r\n                    disabled={measuredItems.length + 1 >= 4}\r\n                    className={`flex-1 px-6 py-3 rounded-full font-semibold transition-colors ${\r\n                      measuredItems.length + 1 >= 4\r\n                        ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                        : 'bg-green-600 text-white hover:bg-green-700'\r\n                    }`}\r\n                  >\r\n                    네 ({4 - (measuredItems.length + 1)}개 더 가능)\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* 디버그 패널 */}\r\n        {showDebugPanel && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h2 className=\"text-xl font-bold\">🐛 패킹 시스템 디버깅</h2>\r\n                <button\r\n                  onClick={() => setShowDebugPanel(false)}\r\n                  className=\"text-gray-500 hover:text-gray-700 text-xl\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                {/* 테스트 버튼들 */}\r\n                <div className=\"grid grid-cols-2 gap-3\">\r\n                  <button\r\n                    onClick={() => runDebugTest('/health')}\r\n                    className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:bg-gray-400\"\r\n                    disabled={isDebugLoading}\r\n                  >\r\n                    헬스체크\r\n                  </button>\r\n                  \r\n                  <button\r\n                    onClick={() => runDebugTest('/pack/test')}\r\n                    className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 disabled:bg-gray-400\"\r\n                    disabled={isDebugLoading}\r\n                  >\r\n                    패킹 테스트\r\n                  </button>\r\n                  \r\n                  <button\r\n                    onClick={() => runDebugTest('/pack/debug')}\r\n                    className=\"bg-purple-500 text-white px-4 py-2 rounded hover:bg-purple-600 disabled:bg-gray-400\"\r\n                    disabled={isDebugLoading}\r\n                  >\r\n                    모듈 디버그\r\n                  </button>\r\n                  \r\n                  <button\r\n                    onClick={() => runDebugTest('/pack/simple', [[30, 20, 10], [40, 30, 15]])}\r\n                    className=\"bg-orange-500 text-white px-4 py-2 rounded hover:bg-orange-600 disabled:bg-gray-400\"\r\n                    disabled={isDebugLoading}\r\n                  >\r\n                    간단한 패킹\r\n                  </button>\r\n                </div>\r\n                \r\n                {/* AI 박스 추천 테스트 */}\r\n                <div className=\"border-t pt-4\">\r\n                  <h4 className=\"font-semibold mb-3 text-gray-800\">🤖 AI 박스 추천 테스트 (app.py)</h4>\r\n                  <div className=\"grid grid-cols-1 gap-2\">\r\n                    <button\r\n                      onClick={async () => {\r\n                        try {\r\n                          const response = await fetch('http://localhost:8001/health');\r\n                          const result = await response.json();\r\n                          setDebugResults({\r\n                            endpoint: 'app.py /health',\r\n                            status: response.status,\r\n                            success: response.ok,\r\n                            data: result,\r\n                            timestamp: new Date().toLocaleTimeString()\r\n                          });\r\n                        } catch (error) {\r\n                          setDebugResults({\r\n                            endpoint: 'app.py /health',\r\n                            success: false,\r\n                            error: error.message,\r\n                            timestamp: new Date().toLocaleTimeString()\r\n                          });\r\n                        }\r\n                      }}\r\n                      className=\"bg-cyan-500 text-white px-4 py-2 rounded hover:bg-cyan-600 disabled:bg-gray-400\"\r\n                      disabled={isDebugLoading}\r\n                    >\r\n                      app.py 헬스체크\r\n                    </button>\r\n                    \r\n                    <button\r\n                      onClick={async () => {\r\n                        try {\r\n                          const testData = {\r\n                            width: 100,\r\n                            length: 80,\r\n                            height: 50\r\n                          };\r\n                          const response = await fetch('http://localhost:8001/recommend', {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify(testData)\r\n                          });\r\n                          const result = await response.json();\r\n                          setDebugResults({\r\n                            endpoint: 'app.py /recommend',\r\n                            status: response.status,\r\n                            success: response.ok,\r\n                            data: result,\r\n                            testInput: testData,\r\n                            timestamp: new Date().toLocaleTimeString()\r\n                          });\r\n                        } catch (error) {\r\n                          setDebugResults({\r\n                            endpoint: 'app.py /recommend',\r\n                            success: false,\r\n                            error: error.message,\r\n                            timestamp: new Date().toLocaleTimeString()\r\n                          });\r\n                        }\r\n                      }}\r\n                      className=\"bg-cyan-600 text-white px-4 py-2 rounded hover:bg-cyan-700 disabled:bg-gray-400\"\r\n                      disabled={isDebugLoading}\r\n                    >\r\n                      AI 박스 추천 테스트\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 현재 측정된 물체로 테스트 */}\r\n                {measuredItems.length > 0 && (\r\n                  <button\r\n                    onClick={() => {\r\n                      const items = measuredItems.map(item => [\r\n                        Math.round(item.width),\r\n                        Math.round(item.length),\r\n                        Math.round(item.height)\r\n                      ]);\r\n                      runDebugTest('/pack/simple', items);\r\n                    }}\r\n                    className=\"w-full bg-indigo-500 text-white px-4 py-2 rounded hover:bg-indigo-600 disabled:bg-gray-400\"\r\n                    disabled={isDebugLoading}\r\n                  >\r\n                    현재 측정된 물체들로 테스트 ({measuredItems.length}개)\r\n                  </button>\r\n                )}\r\n\r\n                {/* 로딩 상태 */}\r\n                {isDebugLoading && (\r\n                  <div className=\"text-center py-4\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto\"></div>\r\n                    <p className=\"mt-2 text-gray-600\">테스트 실행 중...</p>\r\n                  </div>\r\n                )}\r\n\r\n                {/* 테스트 결과 */}\r\n                {debugResults && (\r\n                  <div className=\"mt-6\">\r\n                    <h3 className=\"font-semibold mb-2\">\r\n                      테스트 결과 ({debugResults.timestamp})\r\n                    </h3>\r\n                    \r\n                    <div className={`p-4 rounded border ${debugResults.success ? 'bg-green-50 border-green-200' : 'bg-red-50 border-red-200'}`}>\r\n                      <div className=\"mb-2\">\r\n                        <span className=\"font-medium\">엔드포인트:</span> {debugResults.endpoint}\r\n                      </div>\r\n                      \r\n                      {debugResults.status && (\r\n                        <div className=\"mb-2\">\r\n                          <span className=\"font-medium\">상태:</span> {debugResults.status}\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {debugResults.error ? (\r\n                        <div>\r\n                          <span className=\"font-medium text-red-600\">오류:</span>\r\n                          <pre className=\"mt-1 text-sm bg-red-100 p-2 rounded overflow-x-auto\">\r\n                            {debugResults.error}\r\n                          </pre>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <span className=\"font-medium text-green-600\">응답:</span>\r\n                          <pre className=\"mt-1 text-sm bg-gray-100 p-2 rounded overflow-x-auto max-h-64 overflow-y-auto\">\r\n                            {JSON.stringify(debugResults.data, null, 2)}\r\n                          </pre>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* 디버깅 팁 */}\r\n                <div className=\"mt-6 p-4 bg-blue-50 rounded border border-blue-200\">\r\n                  <h4 className=\"font-semibold text-blue-800 mb-2\">🔍 디버깅 가이드</h4>\r\n                  <ul className=\"text-sm text-blue-700 space-y-1\">\r\n                    <li>• <strong>헬스체크</strong>: main.py 서버 상태 및 설정 확인</li>\r\n                    <li>• <strong>패킹 테스트</strong>: 미리 정의된 데이터로 전체 패킹 플로우 테스트</li>\r\n                    <li>• <strong>모듈 디버그</strong>: wire_packing 모듈 직접 테스트</li>\r\n                    <li>• <strong>간단한 패킹</strong>: 기본적인 패킹 알고리즘만 테스트</li>\r\n                    <li>• <strong>app.py 헬스체크</strong>: AI 박스 추천 서비스 상태 확인</li>\r\n                    <li>• <strong>AI 박스 추천 테스트</strong>: Azure OpenAI 기반 박스 추천 직접 테스트</li>\r\n                  </ul>\r\n                  <div className=\"mt-3 p-2 bg-yellow-100 rounded text-yellow-800 text-xs\">\r\n                    ⚠️ AI 박스 추천이 실패하면 자동으로 로컬 계산으로 fallback됩니다.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* 디버그 버튼 (하단 우측) */}\r\n      {!showDebugPanel && (\r\n        <button\r\n          onClick={() => setShowDebugPanel(true)}\r\n          className=\"fixed bottom-4 right-4 bg-red-600 text-white px-4 py-2 rounded-full text-sm font-bold z-40 shadow-lg hover:bg-red-700\"\r\n        >\r\n          🐛 DEBUG\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductPhotoAnalyzer;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2866, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/you1a/Downloads/netzero/frontend/components/EnvironmentReport.js"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\nimport { ChevronDown } from 'lucide-react';\r\n\r\nconst EnvironmentReport = ({ onBack }) => {\r\n  const [startYear, setStartYear] = useState('2025.05');\r\n  const [endYear, setEndYear] = useState('2025.05');\r\n  const [isDownloading, setIsDownloading] = useState(false);\r\n\r\n  const handlePdfDownload = async () => {\r\n    try {\r\n      setIsDownloading(true);\r\n      \r\n      console.log('PDF 페이지로 이동...');\r\n      \r\n      // 새 창에서 PDF 페이지 열기\r\n      window.open('http://127.0.0.1:8000/report/', '_blank');\r\n      \r\n      console.log('PDF 페이지 열기 완료');\r\n      \r\n    } catch (error) {\r\n      console.error('PDF 페이지 열기 오류:', error);\r\n      alert('PDF 페이지를 열 수 없습니다. 다시 시도해주세요.');\r\n    } finally {\r\n      // 잠시 후 로딩 상태 해제\r\n      setTimeout(() => {\r\n        setIsDownloading(false);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      <div className=\"max-w-md mx-auto px-6 py-8\">\r\n        {/* 헤더 */}\r\n        <div className=\"flex items-center mb-8\">\r\n          <button \r\n            onClick={onBack}\r\n            className=\"text-gray-600 hover:text-gray-800 transition-colors mr-4\"\r\n          >\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\r\n            </svg>\r\n          </button>\r\n          <h1 className=\"text-xl font-bold text-green-800\">리포트</h1>\r\n        </div>\r\n\r\n        {/* 날짜 선택 */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center gap-4 mb-4\">\r\n            <div className=\"relative\">\r\n              <select \r\n                value={startYear}\r\n                onChange={(e) => setStartYear(e.target.value)}\r\n                className=\"appearance-none bg-white border border-gray-300 rounded-lg px-4 py-2 pr-8 text-gray-700 focus:outline-none focus:border-green-500\"\r\n              >\r\n                <option value=\"2025.05\">2025.05</option>\r\n                <option value=\"2025.04\">2025.04</option>\r\n                <option value=\"2025.03\">2025.03</option>\r\n              </select>\r\n              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-500 pointer-events-none\" />\r\n            </div>\r\n            \r\n            <span className=\"text-gray-500\">~</span>\r\n            \r\n            <div className=\"relative\">\r\n              <select \r\n                value={endYear}\r\n                onChange={(e) => setEndYear(e.target.value)}\r\n                className=\"appearance-none bg-white border border-gray-300 rounded-lg px-4 py-2 pr-8 text-gray-700 focus:outline-none focus:border-green-500\"\r\n              >\r\n                <option value=\"2025.05\">2025.05</option>\r\n                <option value=\"2025.04\">2025.04</option>\r\n                <option value=\"2025.03\">2025.03</option>\r\n              </select>\r\n              <ChevronDown className=\"absolute right-2 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-500 pointer-events-none\" />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"text-lg font-medium text-gray-800\">\r\n            2025.05.01 ~ 2025.05.31\r\n          </div>\r\n        </div>\r\n\r\n        {/* 통계 카드들 */}\r\n        <div className=\"space-y-8 mb-16\">\r\n          {/* 총 포장 수 */}\r\n          <div>\r\n            <div className=\"text-lg font-medium text-gray-600 mb-2\">총 포장 수</div>\r\n            <div className=\"text-4xl font-bold text-green-800\">60,000건</div>\r\n          </div>\r\n\r\n          {/* 탄소 절감량 */}\r\n          <div>\r\n            <div className=\"text-lg font-medium text-gray-600 mb-2\">탄소 절감량</div>\r\n            <div className=\"text-4xl font-bold text-green-800\">10.8ton CO₂</div>\r\n          </div>\r\n\r\n          {/* 포장비 절감액 */}\r\n          <div>\r\n            <div className=\"text-lg font-medium text-gray-600 mb-2\">포장비 절감액</div>\r\n            <div className=\"text-4xl font-bold text-green-800\">2,400,000원</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* PDF 다운로드 버튼 */}\r\n        <div className=\"fixed bottom-8 left-1/2 transform -translate-x-1/2 w-full max-w-md px-6\">\r\n          <button \r\n            onClick={handlePdfDownload}\r\n            disabled={isDownloading}\r\n            className=\"w-full bg-green-800 text-white py-4 rounded-full text-lg font-semibold hover:bg-green-900 transition-colors shadow-lg disabled:bg-gray-400 disabled:cursor-not-allowed\"\r\n          >\r\n            {isDownloading ? '다운로드 중...' : 'PDF 다운로드'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnvironmentReport;"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,oBAAoB,CAAC,EAAE,MAAM,EAAE;;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,MAAM,oBAAoB;QACxB,IAAI;YACF,iBAAiB;YAEjB,QAAQ,GAAG,CAAC;YAEZ,mBAAmB;YACnB,OAAO,IAAI,CAAC,iCAAiC;YAE7C,QAAQ,GAAG,CAAC;QAEd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kBAAkB;YAChC,MAAM;QACR,SAAU;YACR,gBAAgB;YAChB,WAAW;gBACT,iBAAiB;YACnB,GAAG;QACL;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,6LAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CACjE,cAAA,6LAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAa;oCAAG,GAAE;;;;;;;;;;;;;;;;sCAGzE,6LAAC;4BAAG,WAAU;sCAAmC;;;;;;;;;;;;8BAInD,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,OAAO;4CACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;4CAC5C,WAAU;;8DAEV,6LAAC;oDAAO,OAAM;8DAAU;;;;;;8DACxB,6LAAC;oDAAO,OAAM;8DAAU;;;;;;8DACxB,6LAAC;oDAAO,OAAM;8DAAU;;;;;;;;;;;;sDAE1B,6LAAC,uNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;;;;;;;8CAGzB,6LAAC;oCAAK,WAAU;8CAAgB;;;;;;8CAEhC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,OAAO;4CACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;4CAC1C,WAAU;;8DAEV,6LAAC;oDAAO,OAAM;8DAAU;;;;;;8DACxB,6LAAC;oDAAO,OAAM;8DAAU;;;;;;8DACxB,6LAAC;oDAAO,OAAM;8DAAU;;;;;;;;;;;;sDAE1B,6LAAC,uNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;;;;;;;;;;;;;sCAI3B,6LAAC;4BAAI,WAAU;sCAAoC;;;;;;;;;;;;8BAMrD,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;;8CACC,6LAAC;oCAAI,WAAU;8CAAyC;;;;;;8CACxD,6LAAC;oCAAI,WAAU;8CAAoC;;;;;;;;;;;;sCAIrD,6LAAC;;8CACC,6LAAC;oCAAI,WAAU;8CAAyC;;;;;;8CACxD,6LAAC;oCAAI,WAAU;8CAAoC;;;;;;;;;;;;sCAIrD,6LAAC;;8CACC,6LAAC;oCAAI,WAAU;8CAAyC;;;;;;8CACxD,6LAAC;oCAAI,WAAU;8CAAoC;;;;;;;;;;;;;;;;;;8BAKvD,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBACC,SAAS;wBACT,UAAU;wBACV,WAAU;kCAET,gBAAgB,cAAc;;;;;;;;;;;;;;;;;;;;;;AAM3C;GAlHM;KAAA;uCAoHS","debugId":null}},
    {"offset": {"line": 3209, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/you1a/Downloads/netzero/frontend/src/app/page.js"],"sourcesContent":["// app/page.js\n\"use client\";\n\nimport React, { useState } from 'react';\nimport WelcomeScreen from '../../components/Welcomescreen';\nimport ProductPhotoAnalyzer from '../../components/ProductPhotoAnalyzer';\nimport EnvironmentReport from '../../components/EnvironmentReport';\n\n\nexport default function HomePage() {\n  const [currentScreen, setCurrentScreen] = useState('welcome');\n\n  const handleStartScan = () => {\n    setCurrentScreen('scan');\n  };\n\n  const handleEnvironmentReport = () => {\n    setCurrentScreen('report');\n  };\n\n  const handleBackToWelcome = () => {\n    setCurrentScreen('welcome');\n  };\n\n  const renderCurrentScreen = () => {\n    switch (currentScreen) {\n      case 'welcome':\n        return (\n          <WelcomeScreen \n            onStartScan={handleStartScan}\n            onEnvironmentReport={handleEnvironmentReport}\n          />\n        );\n      \n      case 'scan':\n        return (\n          <ProductPhotoAnalyzer \n            onBack={handleBackToWelcome}\n          />\n        );\n      \n      case 'report':\n        return (\n          <EnvironmentReport \n            onBack={handleBackToWelcome}\n          />\n        );\n      \n      default:\n        return (\n          <WelcomeScreen \n            onStartScan={handleStartScan}\n            onEnvironmentReport={handleEnvironmentReport}\n          />\n        );\n    }\n  };\n\n  return renderCurrentScreen();\n}"],"names":[],"mappings":"AAAA,cAAc;;;;;AAGd;AACA;AACA;AACA;;;AALA;;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,MAAM,kBAAkB;QACtB,iBAAiB;IACnB;IAEA,MAAM,0BAA0B;QAC9B,iBAAiB;IACnB;IAEA,MAAM,sBAAsB;QAC1B,iBAAiB;IACnB;IAEA,MAAM,sBAAsB;QAC1B,OAAQ;YACN,KAAK;gBACH,qBACE,6LAAC,8HAAA,CAAA,UAAa;oBACZ,aAAa;oBACb,qBAAqB;;;;;;YAI3B,KAAK;gBACH,qBACE,6LAAC,qIAAA,CAAA,UAAoB;oBACnB,QAAQ;;;;;;YAId,KAAK;gBACH,qBACE,6LAAC,kIAAA,CAAA,UAAiB;oBAChB,QAAQ;;;;;;YAId;gBACE,qBACE,6LAAC,8HAAA,CAAA,UAAa;oBACZ,aAAa;oBACb,qBAAqB;;;;;;QAG7B;IACF;IAEA,OAAO;AACT;GAlDwB;KAAA","debugId":null}}]
}